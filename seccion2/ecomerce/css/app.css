
/* https://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
/* * { Box-sizing: Border-box } FTW */
/* apply a natural box layout model to all 
elements, but allowing components to change */
/* Con  Box-sizing: Border-box evitamos el
     problema
    de abajo en aumentar el width 
    con el padding , pero si
     aumentara el  hight y el width queda como
     se lo asignamos 20px.
      width: 20rem;
      padding: 2.5rem; 
     */
html {
    box-sizing: border-box;
    /* Colocamos este font-size de
    62.5% para que un   1rem sea 10px; */
    /* nos convierte un rem en 10px */
    font-size: 62.5%;
  }
  *, *:before, *:after {
    box-sizing: inherit;
  }

  body {
      /* para instalar nuevas fuentes, ir a 
      https://fonts.google.com/ */
      
      /* En la pagina te dice como agregar las font
      de esta manera */
      /* fuente que vas a usar en el proyecto */
      font-family: 'Raleway', sans-serif;
      font-size: 1.6rem;

      /* El interlineado o altura de las 
      linaes en los 
      parrafos lo asignamos con */
      line-height: 2;
  }


 /* nav.navegacion selecciona toda esa etiqueta */
 /* nav .navegacion Quere decir que es otro elemento*/
/* Especifidad */
/* !important,#, clas, selector o elemento
1 1 1 1 */

 

/* GLOBLES */ 

h1, h2, h3 {
    /* Se usa una fuente de goofle para todos 
    los h1 */
 font-family: 'Playfair Display', serif;
 margin: 0 0 5rem 0;
}

/* Todos los heading por default tienen
 margenes */
h1 {
    font-size: 5rem;
}
h2 {
    font-size: 4rem;
}
h3{
    font-size: 3rem;
}

   a {
       text-decoration: none;
       color: #000;
   }

   /* Nos permite centrar el contenido de forma horizontal */
   .contenedor {
       max-width: 120rem;
       /* esto es para cetrar */
       margin: 0rem auto;
       /* para centrar en nuevas versiones */
       /* margin-inline: auto; */
   }

   

   /* seleccionamos todas las imagenes */
   img {
       /* La imagen se adapta y
        solo va a tomar el espacio que ese
        div o contenedor de la imagen tenga disponible */
       max-width: 100%;
       /* Elimina el siguiente espacio entre
        la imagen 
       y el elemento hacia abajo  */
       display: block;
   }

   .btn {
        background-color: #8cbc00;
    /* Display block hace que un elemento
    tome todo el ancho disponible */
    display: block;
    color: #fff;
    text-transform: uppercase;
    font-weight: 900;
    padding: 1rem;
    /* para animar */
    transition: background-color .3s ease-out;

   }
   .btn:hover {
        background-color: #769c02;
   }

 
   /* Utilidades */
   .text-center {
         text-align:center;
   }

/* HEADER Y NAVEGQACION */
/* 
h1 {
    font-size: 2rem;
    color: #000;
}

h1 span {
    color: #037bc0;
} */

header {
    font-size: 10rem;
}

.nombre-sitio {
    margin-top: 5rem;

    /* Este margin botton lo hereda de
    lo headings h* */
    /* margin-bottom: 5rem; */
    text-align: center;
    /* Va a tomar el valor del 50% del 
    elemento padre */
    /* font-size:50%; */
}

.nombre-sitio span {
    color: #037bc0;
}

/* No esta limitado por el .contenedor
que es max-width:1200px */
/* por eso la raya se extiende completa a la pagina */
.contenedor-navegacion{
    border-top: 0.1rem solid #e1e1e1;
}
.nav-principal {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  /* Cuando es direction row, alineas
   con jstify-content horizontalment y 
   align-items verticalment siempre y cuando aiga
   un height grande*/
   /* al reves si es flex-direction:column */
  
  /* border-color: #e1e1e1;
  border-top-style: solid;
  border-width: 1px; */
  padding: 2rem 0rem;
}

.hero {
    background-image: url(../img/principal.jpg);
    background-repeat:no-repeat;

    /* background-position:  va de izquierda a derecha 
    el primer valor y de arriba hacia abajo */
    background-position: center center;
    /* si quieres ver que la imagen se estire y tome todo 
    el espacio disponible */
    background-size: cover;
    height: 55rem;
}


/* categorias */

.categorias {
    padding-top: 5rem;
}
.categorias h2{
 text-align: center;
}

/* listado de categorias */

.listado-categorias{
    display: grid;
    /* separacion entre grids */
    gap: 2rem;
    /* puedes colocar anchos especificos a las columnas */
    /* grid-template-columns: 400px 400px 100px; */
    
    grid-template-columns: repeat(3, 1fr);
    /* grid-template-rows: 1fr; */
    /* grid-template-rows: 100px 100px; */
    /* grid-template-rows: 1fr 1fr; */

}

 
 
.categoria a {
    text-align: center;
    /* Los a o ink solo son centrados si su display
    es block, ellos traen por default inline*/
    display:block;
    padding: 2rem;
    /* agrandar el texto */
    font-size: 2rem;
}

.categoria a:hover {
    background-color:#037bc0;
    color: #fff;
    border-bottom-right-radius: 1rem;
}


/* Bloque nosotros */
/* 
*/
/* BOX MODEL */
.sobre-nosotros{
    /* Seccion 5 -> 36 Creando la seccion de nosotros */
    /* linear-gradient es un degradado lineal */
    /* El primer valor es hacia donde va a correr
    el degradado. to bottom, to left, to top , to right */
    /* to right va de izquerda a derecha */
    /* Segundo valor el degradado que ueras utilizar
    negro en este caso */
    /* Va el 50% en negro y luego degradado poco a poco
    hasta llegar en rojo 100%
    background-image: linear-gradient(to right,
    #000 50%, red 100%) ; */
    /* background-color: #037bc0;
    width: 20rem;
    padding: 2.5rem;  */

    /* Soporta multiples gradient y multiples imagenes */
    background-image: linear-gradient(to right 
    , transparent 50% , #037bc0 50%, #037bc0 100%),
    url(../img/nosotros.jpg);
     background-repeat: no-repeat;

     /* background-size tiene dos valores uno
     para el linear-gradient 100% y el otro
     para el url 120rem*/
     background-size: 100%, 120rem;

     /* background-position: left center la
     imgen muy grande, entonces vemos la parte de la 
     izquerda y centrado */
     background-position: left center;


    /* El padding hace crecer la imagen */
    padding: 10rem 0;
    

    /* Con  Box-sizing: Border-box evitamos el
     problema
    de abajo en aumentar el width 
    con el padding , pero si
     aumentara el  hight y el width queda como
     se lo asignamos 20px.
      width: 20rem;
      padding: 2.5rem; 
     */

    /* box-sizing: content-box,  Este es el
    valor por defecto y aumenta el width original sumando
    el padding*/
    /* Si colocas border box, el tamano del height crece */
    /* Si NO colocas border box,
     el tamano del width crece y no respeta el width tamano inicial */
     /* box-sizing: border-box;
 */
}

.sobre-nosotros-grid_with_grid{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 8rem;
}

.texto-nosotros_with_grid {
    grid-column: 2/3;
    /* Usuaomente no se usa padding en
    css grid. Se usa gap
    padding-left: 50px; */
}


/* Con lexbox alineamos a la derecha */
.sobre-nosotros-grid{
    display: flex;
    justify-content: flex-end;
     
}

/* Seccion 5 => 37 */
.texto-nosotros {
    /* Obligamos que el texto de nosotros
    tenga un ncho de 50% */
    /* Flwx-basis es el ancho del elemento */
    flex-basis: 50%;
    /* gracias a que tenemos el flex-basis habiliado
    colocamos padding-left */
    padding-left: 10rem;
    color: #e1e1e1;
     
}
 
/* Listado de productos */
.contenido-principal{
    padding-top: 5rem;
}
.listado-productos{
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    column-gap: 2rem;
    row-gap: 2rem;
    /* Si haces gap:2rem es lo mismo de lo de arriba */
    /* gap:2rem; */
    
}

.producto:nth-child(1){
    grid-column: 1 /7;

    /* Esta imgen con el texto, aplicamos
    un nuevo grid donde la imagen va
    a tener 3 cuarto */
    display: grid;
    grid-template-columns: 3fr 1fr;
}

/* voy  a limitar la imagen del primer producto */
.producto:nth-child(1) img {
    height: 63rem;

    /* el max-width:100% y display:block hacen que
    la imagen no pierdan proporcion */
   
    width:100%;
    /* Con object-fit le vamos a decir que 
     llene la imagen  
       todo el espacio disponible, pero que
    se mantendga dentro de este contenedor */
    object-fit: cover;



}

.producto:nth-child(2){
    grid-column: 1 /4;
}
.producto:nth-child(2) img {
    height: 30rem;
    /* Obligar a la imagen que este siempre
    al 100% */
    width: 100%;
     /* Con object-fit le vamos a decir que 
     llene la imagen  
       todo el espacio disponible, pero que
    se mantendga dentro de este contenedor */
    object-fit: cover;
}
.producto:nth-child(3){
    grid-column-start: 4;
    grid-column-end: -1;
}
.producto:nth-child(3) img {
    height: 30rem;
    /* Obligar a la imagen que este siempre
    al 100% */
    width: 100%;
     /* Con object-fit le vamos a decir que 
     llene la imagen  
       todo el espacio disponible, pero que
    se mantendga dentro de este contenedor */
    object-fit: cover;
}
.producto:nth-child(4){
    grid-column: 1 /3;
}

.producto:nth-child(5){
    grid-column: 3 / 5;
}

.producto:nth-child(6){
    grid-column: 5 / 7;
}


/* .contenido-principal h2{
    text-align: center;
   } */

   .producto {
    background-color: #037bc0;
    
   }

   .texto-producto {
       text-align: center;
       color: #fff;
       padding:2rem;
   }

   /* todos los heading como h3 tiene
   mucho margen */
/* Se lo eliminamos */
.texto-producto h3 {
    margin: 0;
}
 
/* Eliminams algunos margenes del  parrafo */
.texto-producto p {
    margin: 0 0 5rem 0;
}
.texto-producto a {
       
   }

   .texto-producto .precio {
       font-size: 2.8rem;
       font-weight: 900;
}

/* FOOTER */
.site-footer{
    /* Dibujamos una linea */
    border-top: 1px solid #e1e1e1;
    /* La linea la separamos del contenido principal */
    margin-top: 5rem;
    /* separacion hacia dentro cn el padding */
    padding-top:5rem ;
    /* display: grid;
    grid-template-columns: repeat(3, 1fr); */
}

/* separandolos con flex */

/* .grid-footer {
  display: flex;
  gap: 2rem;
} */
 /* display flex afectara al primer
 nivel de hijos, en este caso los div
 y colocamos flex:1 para que todos
 tengan el mismo tamano */
/* .grid-footer div  {
    /* factor de crecimiento que va a tener cada div 
    flex:1
} */
/* Si quieres agrandar un hijo mas que los
demas */
/* .grid-footer div:nth-child(2){
    flex:3
} */

/* separandolos con  grid */

 .grid-footer {
     display: grid;
     /* grid-template-columns: repeat(3, 1fr); */
     /* Si quieres agrandar un hijo mas que los
demas */
/* El segunda columna recibe 3 px mas que los
demas hasta que complete el ciclo de cuantos 
px le da a  cada uno */
grid-template-columns: 1fr 3fr 1fr;
     gap: 2rem;
 }

 .footer-menu a {
     display: block;
 }
 .site-footer h3 {
     margin-bottom: .5rem;
 }
 .copyright{
     margin-top: 5rem;
     text-align: center;
 }